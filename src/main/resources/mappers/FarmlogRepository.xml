<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.repository.FarmlogRepository">

	<!-- ✅ AI용 자동 등록용: 기본 필드로 farmlog INSERT -->
	<insert id="insertFarmlog">
		INSERT INTO farmlog
		SET
		member_id = #{memberId},
		crop_variety_id = #{cropVarietyId},
		work_type = #{workType},
		activity_type = #{activityType},
		crop_category = #{cropCategory},
		next_schedule = #{nextSchedule},
		work_date = #{workDate},
		work_memo =
		#{workMemo},
		reg_date = NOW(),
		update_date = NOW()
	</insert>


	<!-- ✅ 전체 영농일지 목록 조회 (회원 닉네임 포함) -->
	<select id="getFarmlogs"
		resultType="com.example.demo.vo.Farmlog">
		SELECT F.*, f.img_file_name AS imgFileName, M.nickname AS
		extra__writer
		FROM farmlog AS F
		INNER JOIN `member` AS M ON F.member_id
		= M.id
		ORDER BY F.id DESC
	</select>

	<!-- ✅ 마지막 INSERT된 ID 가져오기 -->
	<select id="getLastInsertId" resultType="int">
		SELECT LAST_INSERT_ID();
	</select>

	<!-- ✅ 사용자 등록: 파라미터 기반 farmlog INSERT -->
	<insert id="writeFarmlog">
		INSERT INTO farmlog (
		member_id,
		crop_variety_id,
		work_type_name,
		agrochemical_name,
		work_date,
		next_schedule,
		work_memo,
		img_file_name,
		isPublic,
		reg_date
		)
		VALUES (
		#{loginedMemberId},
		#{cropVarietyDbId},
		#{work_type_name},
		#{agrochemical_name},
		#{work_date},
		#{nextSchedule},
		#{work_memo},
		#{img_file_name},
		#{isPublic},
		NOW()
		)
	</insert>

	<!-- ✅ 로그인 사용자별 영농일지 목록 조회 (품종·품목 포함) -->
	<select id="findByMemberId" resultType="Farmlog">
		SELECT
		f.*,
		f.img_file_name AS imgFileName,
		v.variety_name AS varietyName,
		c.crop_name AS cropName,
		f.next_schedule AS nextSchedule
		FROM farmlog f
		LEFT JOIN crop_variety v ON
		f.crop_variety_id = v.id
		LEFT JOIN crop c ON
		v.crop_code = c.crop_code
		WHERE f.member_id = #{memberId}
		ORDER BY
		f.work_date DESC
	</select>

	<!-- ✅ ID 기반 영농일지 상세 조회 (회원 닉네임 포함) -->
	<select id="getFarmlogById" resultType="Farmlog">
		SELECT
		f.*,
		f.img_file_name AS imgFileName,
		c.crop_name AS cropName,
		v.variety_name
		AS varietyName,
		f.next_schedule AS nextSchedule,
		m.nickname AS
		extrawriterName
		FROM farmlog f
		LEFT JOIN crop_variety v ON
		f.crop_variety_id = v.id
		LEFT JOIN crop c ON v.crop_code = c.crop_code
		LEFT JOIN member m ON f.member_id = m.id
		WHERE f.id = #{id}
	</select>

	<!-- ✅ 사용자 수정: 영농일지 업데이트 -->
	<update id="updateFarmlog">
		UPDATE farmlog
		SET
		crop_variety_id =
		#{crop_variety_id},
		work_type_name = #{work_type_name},
		agrochemical_name = #{agrochemical_name},
		work_date = #{work_date},
		next_schedule = #{nextSchedule},
		work_memo = #{work_memo},
		img_file_name = #{imgFileName},
		update_date = NOW()
		WHERE id = #{id}
		AND
		member_id = #{member_id}
	</update>

	<update id="modify">
		UPDATE farmlog
		SET
		crop_variety_id =
		#{crop_variety_id},
		work_type_name = #{work_type_name},
		work_date =
		#{work_date},
		next_schedule = #{nextSchedule},
		work_memo = #{work_memo},
		img_file_name = #{img_file_name}
		WHERE id = #{id}
	</update>



	<!-- ✅ ID로 영농일지 삭제 -->
	<delete id="deleteFarmlog">
		DELETE FROM farmlog
		WHERE id = #{id}
	</delete>

	<!-- 공개 게시판용 Farmlog 조회 -->
	<select id="findPublicFarmlogs" resultType="Farmlog">
		SELECT
		f.*,
		f.img_file_name AS imgFileName,   <!-- ✅ 추가 -->
		c.crop_name AS cropName,
		v.variety_name AS varietyName,
		m.nickname AS
		extrawriterName
		FROM
		farmlog f
		LEFT JOIN crop_variety v ON
		f.crop_variety_id = v.id
		LEFT JOIN crop c ON v.crop_code = c.crop_code
		LEFT JOIN member m ON f.member_id = m.id
		WHERE
		f.isPublic = 1
		ORDER BY
		f.reg_date DESC
	</select>

	<!-- 정보공유게시판 검색기능 -->
	<select id="getForPrintFarmlogs" resultType="Farmlog">
		SELECT
		f.id,
		f.member_id,
		f.crop_variety_id,
		f.work_type_id,
		f.agrochemical_id,
		f.work_date,
		f.work_memo,
		f.work_type_name,
		f.next_schedule AS nextSchedule,
		f.img_file_name AS imgFileName,
		f.is_public AS isPublic,
		-- JOIN 데이터
		c.crop_name AS cropName,
		v.variety
		AS varietyName,
		m.nickname AS extrawriterName
		FROM farmlog f
		LEFT JOIN
		crop_variety v ON f.crop_variety_id = v.id
		LEFT JOIN crop c ON
		v.crop_code = c.crop_code
		LEFT JOIN member m ON f.member_id = m.id
		WHERE f.is_public = 1
		<if test="searchKeyword != null and searchKeyword != ''">
			AND ${searchKeywordTypeCode} LIKE CONCAT('%',
			#{searchKeyword}, '%')
		</if>
		ORDER BY f.work_date DESC
		LIMIT #{limit} OFFSET #{offset}
	</select>

	<!-- ✅ 공개게시판 전용: 작성자 닉네임, 품목, 품종으로 검색 -->
	<select id="findPublicLogs" resultType="Farmlog">
		SELECT
		f.*,
		f.img_file_name AS imgFileName,       <!-- 이미지 파일명 -->
		c.crop_name AS cropName,              <!-- 품목명 -->
		v.variety_name AS varietyName,        <!-- 품종명 -->
		m.nickname AS extrawriterName         <!-- 작성자 닉네임 -->
		FROM farmlog f
		LEFT JOIN crop_variety v ON f.crop_variety_id = v.id
		LEFT JOIN crop c ON v.crop_code = c.crop_code
		LEFT JOIN member m ON
		f.member_id = m.id
		WHERE f.isPublic = 1                    <!-- 공개글만 조회 -->
		<if test="writerName != null and writerName != ''">
			AND m.nickname LIKE CONCAT('%', #{writerName}, '%') <!-- 작성자 검색 -->
		</if>
		<if test="cropName != null and cropName != ''">
			AND c.crop_name LIKE CONCAT('%', #{cropName}, '%')  <!-- 품목 검색 -->
		</if>
		<if test="varietyName != null and varietyName != ''">
			AND v.variety_name LIKE CONCAT('%', #{varietyName}, '%') <!-- 품종 검색 -->
		</if>
		ORDER BY f.work_date DESC              <!-- 작업일 최신순 -->
	</select>

	<select id="findPublicLogsUnified" resultType="Farmlog">
		SELECT
		f.*,
		f.img_file_name AS imgFileName,
		c.crop_name AS cropName,
		v.variety_name AS varietyName,
		m.nickname AS extrawriterName
		FROM
		farmlog f
		LEFT JOIN crop_variety v ON f.crop_variety_id = v.id
		LEFT JOIN
		crop c ON v.crop_code = c.crop_code
		LEFT JOIN member m ON f.member_id =
		m.id
		WHERE f.isPublic = 1
		<if
			test="searchKeyword != null and searchKeyword != '' and searchType != null and searchType != ''">
			<choose>
				<when test="searchType == 'nickname'">
					AND m.nickname LIKE CONCAT('%', #{searchKeyword},
					'%')
				</when>
				<when test="searchType == 'cropName'">
					AND c.crop_name LIKE CONCAT('%', #{searchKeyword},
					'%')
				</when>
				<when test="searchType == 'varietyName'">
					AND v.variety_name LIKE CONCAT('%',
					#{searchKeyword}, '%')
				</when>
			</choose>
		</if>
		ORDER BY f.work_date DESC
	</select>
	<!-- 오늘작업일정 가져오기 -->
	<select id="findTodayWorked" resultType="String">
		SELECT
		CONCAT(c.crop_name, ' - ', cv.variety_name)
		FROM farmlog f
		JOIN
		crop_variety cv ON f.crop_variety_id = cv.id
		JOIN crop c ON
		cv.crop_code = c.crop_code
		WHERE f.member_id = #{memberId}
		AND
		f.work_date = #{today}
	</select>

	<select id="findTodayPlanned" resultType="String">
		SELECT
		CONCAT(c.crop_name, ' - ', cv.variety_name)
		FROM farmlog f
		JOIN
		crop_variety cv ON f.crop_variety_id = cv.id
		JOIN crop c ON
		cv.crop_code = c.crop_code
		WHERE f.member_id = #{memberId}
		AND
		f.next_schedule = #{today}
	</select>



</mapper>